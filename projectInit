#!/bin/bash

if [ ! -d "/home/joshuar/Projects/" ]
then
  mkdir "$HOME"/Projects
fi

read -r -p "Enter Project Name: " PNAME
sleep 1

mkdir "$HOME"/Projects/"$PNAME"

while true
do
  read -r -p "Enter Project Type[hardware(h)/software(s)/both(b)/empty(e)]: " PTYPE
  case "$PTYPE" in
    [hH] | [hH][aA][rR][dD][wW][aA][rR][eE])
      mkdir "$HOME"/Projects/"$PNAME"/KiCAD
      mkdir "$HOME"/Projects/"$PNAME"/Fritzing
      mkdir "$HOME"/Projects/"$PNAME"/CAD
      mkdir "$HOME"/Projects/"$PNAME"/docs
      PTYPE='h'
      break
      ;;
    [sS] | [sS][oO][fF][tT][wW][aA][rR][eE])
      mkdir "$HOME"/Projects/"$PNAME"/docs
      mkdir "$HOME"/Projects/"$PNAME"/src
      mkdir "$HOME"/Projects/"$PNAME"/debug
      mkdir "$HOME"/Projects/"$PNAME"/tests
      mkdir "$HOME"/Projects/"$PNAME"/data
      mkdir "$HOME"/Projects/"$PNAME"/lib
      mkdir "$HOME"/Projects/"$PNAME"/include
      mkdir "$HOME"/Projects/"$PNAME"/bin
      mkdir "$HOME"/Projects/"$PNAME"/etc
      PTYPE='s'
      break
      ;;
    [bB] | [bB][oO][tT][hH])
      mkdir "$HOME"/Projects/"$PNAME"/docs
      mkdir "$HOME"/Projects/"$PNAME"/src
      mkdir "$HOME"/Projects/"$PNAME"/debug
      mkdir "$HOME"/Projects/"$PNAME"/tests
      mkdir "$HOME"/Projects/"$PNAME"/data
      mkdir "$HOME"/Projects/"$PNAME"/lib
      mkdir "$HOME"/Projects/"$PNAME"/include
      mkdir "$HOME"/Projects/"$PNAME"/bin
      mkdir "$HOME"/Projects/"$PNAME"/etc
      mkdir "$HOME"/Projects/"$PNAME"/KiCAD
      mkdir "$HOME"/Projects/"$PNAME"/Fritzing
      mkdir "$HOME"/Projects/"$PNAME"/CAD
      PTYPE='b'
      break
      ;;
    [eE] | [eE][mM][pP][tT][yY])
      mkdir "$HOME"/Projects/"$PNAME"/docs
      PTYPE='bl'
      break
      ;;
    *)
      echo "Enter a valid project type."
      ;;
  esac
done

LANGLIST=(python c c++ c\# rust web nodejs)
while true; do
  if [ "$PTYPE" == "s" ] || [ "$PTYPE" == "b" ]
  then
    read -r -p "Enter Project Base Language: " PLANG
    for i in "${LANGLIST[@]}"
    do
      if [ "$i" == "${PLANG,,}" ]
      then
        LANGSTATE=True
        break 2
      fi
    done
    LANGSTATE=False
    echo "Not valid language" # To add boilerplate code for a new language, create a pull request at https://github.com/JDR11/projectInit
  fi
done

# svn export https://github.com/JDR11/projectInit.git/trunk/"${PLANG,,}" "$HOME"/Projects/"$PNAME"/ --force

pushd /tmp
curl -L https://api.github.com/repos/JDR11/projectInit/tarball | tar xzf -
cp -r ./JDR11-projectInit-*/$PLANG/* $HOME/Projects/$PNAME/
popd

cd "$HOME/Projects/$PNAME/" || exit
touch README
git init
git add -A
git commit -m "Initialised project."
curl -X 'POST' 'http://192.168.0.50:3002/api/v1/user/repos' -H 'accept: application/json' -H 'Content-Type: application/json' -H 'Authorization: token f59bf382a4f140195d28b435de26aacd54d97347' -d '{"default_branch": "master", "name": "'"${PNAME}"'", "private": true, "trust_model": "default"}'
git remote add local http://192.168.0.50:3002/joshuar/"$PNAME".git
git push -u local master
